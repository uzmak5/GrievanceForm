{"version":3,"sources":["components/Form.js","components/Display.js","App.js","index.js"],"names":["Form","className","onSubmit","this","props","handleSubmit","type","name","required","Component","Display","resolve","index","updateAction","reject","greviance","map","items","undefined","onClick","App","event","preventDefault","target","elements","email","title","desc","arr","value","setState","state","reset","status","updatedgre","contact","ind","push","ReactDOM","render","document","getElementById"],"mappings":"0MAwBeA,E,4JArBb,WACE,OACE,sBAAKC,UAAU,gBAAf,UACE,oBAAIA,UAAU,cAAd,4BACA,uBAAMC,SAAUC,KAAKC,MAAMC,aAAcJ,UAAU,aAAnD,UACE,gCAAO,0CACP,uBAAOA,UAAU,eAAeK,KAAK,QAAQC,KAAK,QAAQC,UAAQ,IAAE,uBAAK,uBACzE,gCAAO,0CACP,uBAAOP,UAAU,eAAeK,KAAK,OAAOC,KAAK,QAAQC,UAAQ,IAAE,uBAAK,uBACxE,gCAAO,gDACP,uBAAOP,UAAU,eAAeK,KAAK,OAAOC,KAAK,OAAOC,UAAQ,IAAE,uBAAK,uBACvE,qBAAKP,UAAU,cAAf,SACA,wBAAQA,UAAU,eAAeK,KAAK,SAAtC,gC,GAbSG,aC2CJC,E,4MAzCbC,QAAU,SAACC,GACT,EAAKR,MAAMS,aAAa,WAAWD,I,EAGrCE,OAAS,SAACF,GACR,EAAKR,MAAMS,aAAa,WAAWD,I,4CAGrC,WAAU,IAAD,OACFG,EAAaZ,KAAKC,MAAlBW,UACL,OAEE,qBAAKd,UAAU,+DAAf,SACGc,EAAUC,KAAI,SAACC,EAAML,GACpB,OACE,sBAAiBX,UAAU,WAA3B,UACE,6CAAuB,4BAAIgB,EAAM,KAAO,uBACxC,6CAAuB,4BAAIA,EAAM,KAAO,uBACxC,mDAA6B,4BAAIA,EAAM,KAAO,4BAC/BC,IAAbD,EAAM,GACF,sBAAKhB,UAAU,mBAAf,UACE,wBAAQA,UAAU,6BAA6BkB,QAAS,kBAAI,EAAKR,QAAQC,IAAzE,sBADF,SAEE,wBAAQX,UAAU,4BAA4BkB,QAAS,kBAAI,EAAKL,OAAOF,IAAvE,yBAGF,qBAAKX,UAAU,cAAf,SACgB,aAAbgB,EAAM,GACL,qBAAKhB,UAAU,eAAf,SAA8B,4BAAIgB,EAAM,OAExC,qBAAKhB,UAAU,cAAf,SAA6B,4BAAIgB,EAAM,WAdzCL,Y,GAjBAH,aCiDPW,G,wDA5Cb,aAAc,IAAD,8BACX,gBAMFf,aAAe,SAACgB,GACdA,EAAMC,iBACN,MAA2BD,EAAME,OAAOC,SAAnCC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KACfC,EAAM,CAACH,EAAMI,MAAOH,EAAMG,MAAOF,EAAKE,OAC1C,EAAKC,SAAS,CACZf,UAAS,sBAAO,EAAKgB,MAAMhB,WAAlB,CAA6Ba,MACtC,WACAP,EAAME,OAAOS,YAdJ,EAkBbnB,aAAe,SAACoB,EAAOrB,GACrB,IAAIsB,EAAa,EAAKH,MAAMhB,UAAUC,KAAI,SAACmB,EAAQC,GACjD,OAAGA,IAAQxB,GACTuB,EAAQE,KAAKJ,GACNE,GAEAA,KAGX,EAAKL,SAAS,CACZf,UAAWmB,KA1Bb,EAAKH,MAAQ,CACXhB,UAAY,IAHH,E,0CAgCb,WACE,OACE,sBAAKd,UAAU,oBAAf,UACE,cAAC,EAAD,CAAMI,aAAgBF,KAAKE,eAC3B,cAAC,EAAD,CAASU,UAAaZ,KAAK4B,MAAMhB,UAAWF,aAAgBV,KAAKU,sB,GArCvDJ,cCFlB6B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.260e8534.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container p-4\">\r\n        <h2 className=\"text-center\">Grievance Form</h2>\r\n        <form onSubmit={this.props.handleSubmit} className=\"form-group\">\r\n          <label><b>Email :</b></label>\r\n          <input className=\"form-control\" type=\"email\" name=\"email\" required/><br/><br/>\r\n          <label><b>Title :</b></label>\r\n          <input className=\"form-control\" type=\"text\" name=\"title\" required/><br/><br/>\r\n          <label><b>Description :</b></label>\r\n          <input className=\"form-control\" type=\"text\" name=\"desc\" required/><br/><br/>\r\n          <div className=\"text-center\">\r\n          <button className=\"btn btn-info\" type=\"submit\">Submit</button>\r\n          </div>     \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Form;","import React, { Component } from 'react'\r\n\r\nclass Display extends Component {\r\n\r\n  resolve = (index) =>{\r\n    this.props.updateAction(\"Resolved\",index)\r\n  }\r\n\r\n  reject = (index) =>{\r\n    this.props.updateAction(\"Rejected\",index)\r\n  }\r\n\r\n  render() {\r\n    let {greviance} = this.props;\r\n    return (\r\n      \r\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n        {greviance.map((items,index)=>{\r\n          return(\r\n            <div key={index} className=\"main-box\">\r\n              <label>Email : </label><b>{items[0]}</b><br />\r\n              <label>Title : </label><b>{items[1]}</b><br />\r\n              <label>Description : </label><b>{items[2]}</b><br />\r\n              { items[3] === undefined ? \r\n                    <div className=\"text-center mt-3\"> \r\n                      <button className=\"btn btn-submit btn-primary\" onClick={()=>this.resolve(index)}>Resolved</button>&ensp;\r\n                      <button className=\"btn btn-submit btn-danger\" onClick={()=>this.reject(index)}>Rejected</button> \r\n                    </div>\r\n                    : \r\n                    <div className=\"text-center\"> \r\n                      {items[3] === \"Resolved\" ? \r\n                        <div className=\"text-success\"><b>{items[3]}</b></div>\r\n                        :\r\n                        <div className=\"text-danger\"><b>{items[3]}</b></div>\r\n                    }\r\n                    </div> \r\n               }         \r\n            </div>\r\n          )\r\n        })} \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Display;","\nimport React, { Component } from 'react'\nimport Form from './components/Form'\nimport Display from './components/Display'\nimport \"./App.css\"\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      greviance : []\n    }\n  }\n\n  handleSubmit = (event)=> {\n    event.preventDefault()\n    let {email, title, desc} = event.target.elements\n    let arr = [email.value, title.value, desc.value]\n    this.setState({\n      greviance : [...this.state.greviance, arr]\n    },()=>{\n      event.target.reset()\n    })\n  }\n\n  updateAction = (status,index)=>{\n    let updatedgre = this.state.greviance.map((contact,ind)=>{\n      if(ind === index) {\n        contact.push(status)\n        return contact\n      } \n        return contact\n    })\n\n    this.setState({\n      greviance: updatedgre\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container bg-dark\">\n        <Form handleSubmit = {this.handleSubmit} />\n        <Display greviance = {this.state.greviance} updateAction = {this.updateAction}/>\n      </div>\n    )\n\n    \n  }\n}\n\nexport default App;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}